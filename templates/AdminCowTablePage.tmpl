{{ define "AdminCowTablePage.tmpl"}}
<!DOCTYPE html>
<html lang="ru">
<head> 
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{.title}}</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;  
            margin: 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            align-items: center;
            overflow: hidden;
            margin-left: 60px;
            margin-right: 12px;
        }

        .header {
            position: rel;
            height: 60px
        }

        .back-button {
            position: absolute;
            top: 20px;
            left: 20px;
            background-color: #e0c6f2; /* Светлый оттенок фиолетового */
            color: #FFF;
            border: none;
            padding: 8px 12px;
            cursor: pointer;
            font-size: 16px;
            transition: background-color 0.3s ease;
            background-color: #6f42c1;

            position: absolute;
            height: 100vh;
            top: 0;
            left: 0;
        }

        .back-button:hover {
            background-color: #5a32a3; /* Темнее фиолетового при наведении */
        }

        h1 {
            color: #6f42c1;  
        }
        
        .admin-select-button {
            position: relative;
            left: 10px
        }

        .container-table {
            margin-top: 30px;
            width: 100%;
            height: 75vh;
            overflow: scroll;
            background-color: #fff;
        }
        
        table {
            width: 80%;  
            border-collapse: collapse;  
            background-color: #fff;  
            /* box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1); */
        }

        th {
            position: sticky;
            top: 0px;
            z-index: 999;
        }


        th, td {
            padding: 10px;
            text-align: center;
            border: 1px solid #dddddd;  
            white-space: nowrap;
        }

        th {
            background-color: #6f42c1;  
            color: white;  
        }

        tr:hover {
            background: #e8e8e8;
            cursor: pointer;
        } 

        .long_word_td_div::-webkit-scrollbar{
            display: none;
        }
        .long_word_td_div{
            -ms-overflow-style: none;  /* IE and Edge */
            scrollbar-width: none;  /* Firefox */
        }

        .selected-row {
            background-color: blue; /* Цвет фона для выделенной строки */
            color: white; /* Цвет текста для читаемости */
        } 

        .selected-row:hover {
            background-color: #002a8c;
        }

        .pagination-container {
            display: flex; 
            justify-content: space-between; 
            align-items: center;
            margin-top: 20px;
        }
        
        .pagination {
            display: flex;
            justify-content: center;  
            margin: 5px 0;  
        }

        .pagination ul {
            list-style: none;  
            padding: 0;  
        }

        .pagination .page-item {
            margin: 0 5px;  
        }

        .pagination .page-item .page-link {
            display: inline-block;  
            padding: 10px 15px;  
            border: 1px solid #6f42c1;  
            border-radius: 5px;  
            color: #6f42c1;  
            text-decoration: none;  
        }

        .pagination .page-item.active .page-link {
            background-color: #6f42c1;  
            color: white;  
        }

        .pagination .page-item .page-link:hover {
            background-color: #5c37a0;  
            color: white;  
        }
        
        .confirm .check-button {
            padding: 10px 15px;  
            border: 1px solid #6f42c1;  
            border-radius: 5px;  
            background-color: #6f42c1;  
            color: white;  
            cursor: pointer;  
        }

        .confirm .check-button:hover {
            background-color: #5c37a0;  
        }

        .current-page {
            background-color: #6f42c1;
            color: white;
            padding: 10px 15px;
            border-radius: 5px;
            position: absolute;
            bottom: 20px;
            right: 20px;
        }
        
        .notification {
            position: fixed;
            top: 20px;
            right: 20px;
            background-color: lightgreen;
            color: black;
            padding: 15px;
            border-radius: 5px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            z-index: 1000;
        }

    </style>
</head>
<body>
    <div class="header">
        <h1>Список коров</h1>
    </div>
    <button class="back-button" onclick="window.location.href='/api/admin'">
        <svg  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-chevron-left"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M15 6l-6 6l6 6" /></svg>
    </button>
    <div class="container-table">
        <table>
        <thead>
            <tr>
                <th><input class="checkbox-red" type="checkbox" id="check-all" onclick="toggle(this)"></th>
                <th>Дата добавления</th>
                <th>Идентификатор</th>
                <th>Селекс</th>
                <th>РСХН</th>
                <th>Инв номер</th>
                <th>Ферма</th>
                <th>Хозяйство</th>
                <th>Порода</th>
                <th>Пол</th>
                <th>Селекс отца</th>
                <th>Селекс матери</th>
                <th>Кличка</th>
                <th>Коэф. инбриндинга</th>
                <th>Дата рождения</th>
                <th>День выбытия</th>
                <th>Дата перебирковки</th>
                <th>Предыдущее хоз.</th>
                <th>Хоз. рождения</th>
                <th>Способ зачатия</th>
                <th>Предыдущий инв. номер</th>
            </tr>
        </thead>
        <tbody>
            {{range .cows}} <!-- Итерация по списку коров -->
            <tr onclick="toggleCheckbox(this, event)">
                <td><input type="checkbox" class="cow-checkbox" value="{{.ID}}"></td>
                <td>{{if .CreatedAt}}{{.CreatedAt.Format "02-01-2006"}}{{end}}</td>
                <td>{{if .IdentificationNumber}}{{.IdentificationNumber}}{{end}}</td>
                <td>{{if .SelecsNumber}}{{.SelecsNumber}}{{end}}</td>
                <td>{{if .RSHNNumber}}{{.RSHNNumber}}{{end}}</td>
                <td>{{if .InventoryNumber}}{{.InventoryNumber}}{{end}}</td>
                <td>{{if .FarmID}}{{.Farm.Name}}{{end}}</td>
                <td>{{if .FarmGroupId}}{{.FarmGroup.Name}}{{end}}</td>
                <td>{{if .BreedId}}{{.Breed.Name}}{{end}}</td>
                <td>{{if .SexId}}{{.Sex.Name}}{{end}}</td>
                <td>{{if .FatherSelecs}}{{.FatherSelecs}}{{end}}</td>
                <td>{{if .MotherSelecs}}{{.MotherSelecs}}{{end}}</td>
                <td>{{if .Name}}{{.Name}}{{end}}</td>
                <td>{{if .InbrindingCoeffByFamily}}{{.InbrindingCoeffByFamily}}{{end}}</td>
                <td>{{if .BirthDate}}{{.BirthDate.Format "02-01-2006"}}{{end}}</td>
                <td>{{if .DepartDate}}{{.DepartDate.Format "02-01-2006"}}{{end}}</td>
                <td>{{if .BirkingDate}}{{.BirkingDate.Format "02-01-2006"}}{{end}}</td>
                <td>{{if .PreviousHozId}}{{.PreviousHoz.Name}}{{end}}</td>
                <td>{{if .BirthHozId}}{{.BirthHoz.Name}}{{end}}</td>
                <td>{{if .BirthMethod}}{{.BirthMethod}}{{end}}</td>
                <td>{{if .PreviousInventoryNumber}}{{.PreviousInventoryNumber}}{{end}}</td>
            </tr>
            {{end}}
        </tbody>
    </table>
    </div>

    <div class="pagination-container">
        <div class="pagination">
            {{if gt .totalPages 1}}
                <ul class="pagination justify-content-center">
                    {{if le .totalPages 5}}
                        {{range $i := seq 1 .totalPages}}
                            <li class="page-item {{if eq $i $.currentPage}}active{{end}}">
                                <a class="page-link" href="?page={{$i}}">{{$i}}</a>
                            </li>
                        {{end}}
                    {{else}}
                        {{range $i := seq 1 4}}
                            <li class="page-item {{if eq $i $.currentPage}}active{{end}}">
                                <a class="page-link" href="?page={{$i}}">{{$i}}</a>
                            </li>
                        {{end}}
                        {{if ne $.currentPage 5}}
                            <li class="page-item">
                                <button class="page-link" onclick="goToPage()">...</button>
                            </li>
                            <li class="page-item">
                                <a class="page-link" href="?page={{.totalPages}}">{{.totalPages}}</a>
                            </li>
                        {{end}}
                    {{end}}
                </ul>
            {{end}}
        </div>
        <div class="confirm">
            <button class="check-button" onclick="approveCows()">Подтвердить</button>
        </div>
    </div>
    <div class="current-page">Страница {{.currentPage}}</div>
    <div id="notification" class="notification" style="display:none;">Подтверждено</div>
</body>

<script>
    window.onload = function() {
        const notification = document.getElementById('notification');
        
        // Проверяем, нужно ли показывать уведомление
        if (localStorage.getItem('showNotification') === 'true') {
            notification.style.display = 'block';

            // Удаляем уведомление через 1,5 секунды
            setTimeout(() => {
                notification.style.display = 'none';
                localStorage.removeItem('showNotification');
            }, 1500);
        }
    };

    function toggle(source) {
        const checkboxes = document.querySelectorAll('input[type="checkbox"].cow-checkbox');
        checkboxes.forEach(checkbox => {
            checkbox.checked = source.checked; 
        });
    }

    function toggleCheckbox(row, event) {
        const checkbox = row.querySelector("input[type='checkbox']");
        if (event.target !== checkbox) {
            checkbox.checked = !checkbox.checked;
        }
    }

    function goToPage() {
        let page = prompt("Введите номер страницы:");
        page = parseInt(page);
        
        if (!isNaN(page) && page > 0 && page <= {{.totalPages}}) {
            window.location.href = "?page=" + page;
        } else {
            alert("Некорректный номер страницы. Пожалуйста, введите число от 1 до " + {{.totalPages}} + ".");
        }
    }

    function approveCows() {
        const checkboxes = document.querySelectorAll('.cow-checkbox');
        const cowIds = Array.from(checkboxes);
        const approved = []; // Для подтвержденных коров
        const notApproved = []; // Для непрошедших коров
        const currentDate = new Date(); //Дата обновления данных

        
        // Разделяем коров на подтвержденные и непрошедшие
        cowIds.forEach(checkbox => {
            if (checkbox.checked) {
                notApproved.push(checkbox.value); // Если галка установлена, то это непрошедшая корова
            } else {
                approved.push(checkbox.value); // Если галка не установлена, то это подтвержденная корова
            }
        });


        // Создаём объект для отправки на сервер
        const data = {
            approved: approved, // Здесь находятся ID подтвержденных коров (значение 1)
            notApproved: notApproved, // Здесь находятся ID непрошедших коров (значение -1)
            currentDate: currentDate,
        };

        // Отправка на сервер
        fetch('/api/admin/approveCows', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(data),
        })
        .then(response => {
            if (!response.ok) {
                console.error('Ошибка сервера:', response.status);
                throw new Error('Сетевое соединение не установлено');
            }
            return response.json();
        })
        .then(data => {
            console.log('Успех:', data);
        })
        .catch((error) => {
            console.error('Ошибка:', error);
        });

        localStorage.setItem('showNotification', 'true');
        setTimeout(function() {
            location.reload();
        }, 100);
    }

    

</script>
</html>
{{ end }}