// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/analitics/checkMilks/years": {
            "post": {
                "description": "Возращает словарь год - истина. Ключи словаря - это годы по которым есть аналитика",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics (Milk)"
                ],
                "summary": "Get list of years",
                "parameters": [
                    {
                        "description": "applied filters",
                        "name": "filter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cows_filter.CowsFilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/analitics/checkMilks/{year}/byDistrict/{district}/byHoz": {
            "post": {
                "description": "Возращает словарь название хозяйства - аналитика по хозяйству",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics (Milk)"
                ],
                "summary": "Получить аналитику по хозяйству",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "год за который собирается статистика",
                        "name": "year",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "район за который собирается статистика",
                        "name": "district",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "applied filters",
                        "name": "filter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cows_filter.CowsFilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": {
                                    "$ref": "#/definitions/analitics.cmByHozStatistics"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/analitics/checkMilks/{year}/byRegion": {
            "post": {
                "description": "Возращает словарь название региона - статистика по региону",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics (Milk)"
                ],
                "summary": "Get by region analytics",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "год за который собирается статистика",
                        "name": "year",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "applied filters",
                        "name": "filter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cows_filter.CowsFilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": {
                                    "$ref": "#/definitions/analitics.cmByRegionStatistics"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/analitics/checkMilks/{year}/byRegion/{region}/byDistrict": {
            "post": {
                "description": "Возращает словарь название района - аналитика по району",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics (Milk)"
                ],
                "summary": "Get by district analytics",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "год за который собирается статистика",
                        "name": "year",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "регион за который собирается статистика",
                        "name": "region",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "applied filters",
                        "name": "filter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cows_filter.CowsFilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": {
                                    "$ref": "#/definitions/analitics.cmByDistrictStatistics"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/analitics/genotyped/years": {
            "get": {
                "description": "Возращает словарь год - количеств генотипированных коров, по ключу -1 генотипированные за все годы",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics (GeneticGET)"
                ],
                "summary": "Get list of years",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "integer"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Возращает словарь год - количеств генотипированных коров, по ключу -1 генотипированные за все годы",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics(GeneticFilters)"
                ],
                "summary": "Get list of years",
                "parameters": [
                    {
                        "description": "applied filters",
                        "name": "filter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cows_filter.CowsFilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {}
                        }
                    }
                }
            }
        },
        "/analitics/genotyped/{year}/byDistrict/{district}/hold": {
            "get": {
                "description": "Возращает словарь хозяйство - количество живых коров, количество генотипированных\nПолучилась какая-то фигня, по-моему этот рут был просто переписан и не переименован, т.к. были непонятки с ТЗ",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics (GeneticGET)"
                ],
                "summary": "Получить аналитику по хозяйству",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "год за который собирается статистика",
                        "name": "year",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "район за который собирается статистика",
                        "name": "district",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/analitics.byHoldStatistics"
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/analitics/genotyped/{year}/byDistrict/{district}/hoz": {
            "post": {
                "description": "Возращает словарь хозяйство - количество живых коров, количество генотипированных",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics(GeneticFilters)"
                ],
                "summary": "Get analytics by hoz",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "год за который собирается статистика",
                        "name": "year",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "район за который собирается статистика",
                        "name": "district",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "applied filters",
                        "name": "filter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cows_filter.CowsFilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": {
                                    "$ref": "#/definitions/analitics.byHozStatistics"
                                }
                            }
                        }
                    },
                    "421": {
                        "description": "Misdirected Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/analitics/genotyped/{year}/byHold/{hold}/hoz": {
            "get": {
                "description": "Возращает словарь хозяйство - количество живых коров, количество генотипированных",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics (GeneticGET)"
                ],
                "summary": "Get list of years",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "год за который собирается статистика",
                        "name": "year",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "холдинг за который собирается статистика",
                        "name": "hold",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/analitics.byHoldStatistics"
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/analitics/genotyped/{year}/byRegion/{region}/districts": {
            "get": {
                "description": "Возращает словарь район - количество живых коров, количество генотипированных",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics (GeneticGET)"
                ],
                "summary": "Get genetic analytics by districts",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "год за который собирается статистика",
                        "name": "year",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "регион за который собирается статистика",
                        "name": "region",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/analitics.byDistrictStatistics"
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Возращает словарь район - количество живых коров, количество генотипированных",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics(GeneticFilters)"
                ],
                "summary": "Get analytics by districts",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "год за который собирается статистика",
                        "name": "year",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "регион за который собирается статистика",
                        "name": "region",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "applied filters",
                        "name": "filter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cows_filter.CowsFilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": {
                                    "$ref": "#/definitions/analitics.byDistrictStatistics"
                                }
                            }
                        }
                    },
                    "421": {
                        "description": "Misdirected Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/analitics/genotyped/{year}/regions": {
            "get": {
                "description": "Возращает словарь регион - количество живых коров, количество генотипированных",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics (GeneticGET)"
                ],
                "summary": "Get genetic analytics by region",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "год за который собирается статистика",
                        "name": "year",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/analitics.byRegionStatistics"
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Возращает словарь регион - количество живых коров, количество генотипированных",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics(GeneticFilters)"
                ],
                "summary": "Get analytics by region",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "год за который собирается статистика",
                        "name": "year",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "applied filters",
                        "name": "filter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cows_filter.CowsFilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": {
                                    "$ref": "#/definitions/analitics.byRegionStatistics"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/checkEmail": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "REGISTER"
                ],
                "summary": "CHECK EMAIL (USED FOR ADMIN PAGE)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "email of user to check",
                        "name": "email",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {}
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "После успешного логина возвращает словарь с ключем \"token\" - access token. Обеспечивает логин по JWT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "LOGIN"
                ],
                "summary": "LOGIN",
                "parameters": [
                    {
                        "description": "applied filters",
                        "name": "AuthData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.AuthData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {}
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Нужно для админки",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "REGISTER"
                ],
                "summary": "REGISTER (FOR ADMIN PAGE)",
                "parameters": [
                    {
                        "description": "applied filters",
                        "name": "RegisterData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.RegisterData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {}
                        }
                    }
                }
            }
        },
        "/auth/roles": {
            "get": {
                "description": "Возращает список ролей",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "LOGIN"
                ],
                "summary": "LOGIN",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Role"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/breeds": {
            "get": {
                "description": "Возращает список всех пород",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Breeds"
                ],
                "summary": "Get list of breeds",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Breed"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/breeds/{id}": {
            "get": {
                "description": "Возращает породу.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Breeds"
                ],
                "summary": "Get breed",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID конкретной породы, если нужно вернуть одну.",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Breed"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/checkMilks": {
            "get": {
                "description": "Возращает список контрольных доек. Без фильтра нельзя, т.к. слишком много контрольных доений",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CheckMilks"
                ],
                "summary": "Get list of checkMilks",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id лактации, для корой ищутся котнольные дойки",
                        "name": "lactation_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.CheckMilk"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/checkMilks/{id}": {
            "get": {
                "description": "Возращает контрольную дойку",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CheckMilks"
                ],
                "summary": "Get checkMilk",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id контрольной дойки",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CheckMilk"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/cows": {
            "get": {
                "description": "Возращает коров удовлетворяющих условиям фильтрации.",
                "tags": [
                    "Cows"
                ],
                "summary": "Get list of cows",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID фермы (НЕ хозяйства), к которой принадлежит корова",
                        "name": "farm_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "ID хозяйства (НЕ фермы), к которому принадлежит корова",
                        "name": "farm_group_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/cows.ReserealizedCow"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/cows/filter": {
            "post": {
                "description": "Возращает словарь с двумя ключами \"N\", \"LST\". По ключу \"N\" - общее кол-во найденных коров,\nпо ключу \"LST\" массив объектов filterSerealizedCow (см. Models)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cows"
                ],
                "summary": "Get filtered list of cows",
                "parameters": [
                    {
                        "description": "applied filters",
                        "name": "filter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cows_filter.CowsFilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": {
                                    "$ref": "#/definitions/cows.FilterSerializedCow"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/cows/{id}": {
            "get": {
                "description": "Возращает конкретную корову. Поля Father и Mother, имеют FatherId и MotherID null всегда, это неправильно, но так надо",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cows"
                ],
                "summary": "Get concrete cow",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID конкретной коровы, чтобы ее вернуть",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cows.ReserealizedCow"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/cows/{id}/checkMilks": {
            "get": {
                "description": "Возращает список всех контрольных доек для конкретной коровы.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cows"
                ],
                "summary": "Get list of check milks",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID коровы для которой ищутся контрольные дойки",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/cows.ReserealizedCheckMilk"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/cows/{id}/children": {
            "get": {
                "description": "Возращает список всех детей для конкретной коровы.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cows"
                ],
                "summary": "Get list of children",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID коровы для которой ищутся лактации",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/cows.Children"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/cows/{id}/documents": {
            "get": {
                "description": "Возвращает список документов коровы",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cows"
                ],
                "summary": "Get list of documents",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID коровы для которой ищутся документы",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Document"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/cows/{id}/exterior": {
            "get": {
                "description": "Возращает информацию об экстерьере, null, если нет",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cows"
                ],
                "summary": "Get exterior",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID коровы для которой ищется экстерьер",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Exterior"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/cows/{id}/genetic": {
            "get": {
                "description": "Возращает генетическую информацию для коровы, null, если нет",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cows"
                ],
                "summary": "Get list of check milks",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID коровы для которой ищется генетическая информация",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Genetic"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/cows/{id}/grades": {
            "get": {
                "description": "Возращает словарь с двумя ключам \"ByRegion\" - оценки по региону и \"ByHoz\" - оценки по хозяйству",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cows"
                ],
                "summary": "Get grades",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID коровы для которой ищутся оценки",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/models.Grade"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/cows/{id}/health": {
            "get": {
                "description": "Возращает список всех ветеренарных мероприятий для конкретной коровы.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cows"
                ],
                "summary": "Get list of health events",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID коровы для которой ищутся вет мероприятия",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Event"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/cows/{id}/lactations": {
            "get": {
                "description": "Возращает список всех лактаций для конкретной коровы.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cows"
                ],
                "summary": "Get list of lactations",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID коровы для которой ищутся лактации",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Lactation"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/dailyMilks": {
            "get": {
                "description": "Возвращает дойки удовлетворяющие фильтрам. Без фильтра не работает, т.к. слишком много доений",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DailyMilks"
                ],
                "summary": "Get list of DailyMilks",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id lactation to search dailimilks",
                        "name": "lactation_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.DailyMilk"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/dailyMilks/{id}": {
            "get": {
                "description": "Возращает конкретную дойку коровы.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DailyMilks"
                ],
                "summary": "Get dailyMilk",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id of dailymilk",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DailyMilk"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/districts": {
            "get": {
                "description": "Возращает все районы. Разрешает отсутсвие фильтров",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Districts"
                ],
                "summary": "Get list of Districts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.DailyMilk"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/farms": {
            "get": {
                "description": "Возращает список ферм. Разрешает отсутсвие фильтров",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Farms"
                ],
                "summary": "Get list of farms",
                "parameters": [
                    {
                        "type": "object",
                        "description": "ID более главной фермы, null для поиска холдингов",
                        "name": "parrent_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Farm"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/farms/{id}": {
            "get": {
                "description": "Возращает конкретную ферму (хозяйство, холдинг)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Farms"
                ],
                "summary": "Get farm",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id of farm to return",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Farm"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/lactations/{id}": {
            "get": {
                "description": "Возращает конкретную лактацию",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Lactations"
                ],
                "summary": "Get list of farms",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id лактации",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Lactation"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/monogenetic_illnesses": {
            "get": {
                "description": "Возращает список генетических заболеваний",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MonogeneticIllnessses"
                ],
                "summary": "Get list of monogenetic illnesses",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.GeneticIllness"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/partners": {
            "get": {
                "description": "Возращает список партнеров",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Partners"
                ],
                "summary": "Get list of partners",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Partner"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/regions": {
            "get": {
                "description": "Возращает все регионы",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Regions"
                ],
                "summary": "Get list of regions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Region"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/regions/{id}": {
            "get": {
                "description": "Возращает регион",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Regions"
                ],
                "summary": "Get concrete region",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id региона",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Region"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/regions/{id}/getFarms": {
            "get": {
                "description": "Возращает все фермы в регионе (Данные представлены как словарь с единственным ключем \"farms\")",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Regions"
                ],
                "summary": "Get farm by region id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id of region",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Farm"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/regions/{id}/news": {
            "get": {
                "description": "Возращает новости региона",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Regions"
                ],
                "summary": "Get region's news",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id региона",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.News"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/sexes": {
            "get": {
                "description": "Возращает список полов",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sexes"
                ],
                "summary": "Get list of sexes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Sex"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/updates": {
            "get": {
                "description": "Возращает дату апдейта БД",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Updates"
                ],
                "summary": "Get update date and ID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Update"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/create": {
            "post": {
                "description": "Рут для создания запроса на регистрацию",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "User register request",
                "parameters": [
                    {
                        "description": "applied filters",
                        "name": "userData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user_create.createUserData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/verifyEmail": {
            "get": {
                "description": "Ссылка должна приходить на почту пользователя автоматически, с фронтенда этот рут не фетчить",
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get list of sexes",
                "responses": {}
            }
        }
    },
    "definitions": {
        "analitics.byDistrictStatistics": {
            "type": "object",
            "properties": {
                "alive": {
                    "description": "количество живых коров",
                    "type": "integer"
                },
                "districtID": {
                    "description": "ID района",
                    "type": "integer"
                },
                "genotyped": {
                    "description": "количество генотипированных коров",
                    "type": "integer"
                },
                "ill": {
                    "description": "количество больных коров",
                    "type": "integer"
                }
            }
        },
        "analitics.byHoldStatistics": {
            "type": "object",
            "properties": {
                "alive": {
                    "description": "количество живых коров",
                    "type": "integer"
                },
                "genotyped": {
                    "description": "количество генотипированных коров",
                    "type": "integer"
                },
                "holdID": {
                    "description": "ID хозяйства (что-то с этим не так, потому что статистика по холдингам не собирается)",
                    "type": "integer"
                },
                "ill": {
                    "description": "количество больных коров",
                    "type": "integer"
                }
            }
        },
        "analitics.byHozStatistics": {
            "type": "object",
            "properties": {
                "alive": {
                    "description": "количество живых коров",
                    "type": "integer"
                },
                "genotyped": {
                    "description": "количество генотипированных коров",
                    "type": "integer"
                },
                "ill": {
                    "description": "количество больных коров",
                    "type": "integer"
                }
            }
        },
        "analitics.byRegionStatistics": {
            "type": "object",
            "properties": {
                "alive": {
                    "description": "количество живых коров",
                    "type": "integer"
                },
                "genotyped": {
                    "description": "количество генотипированных коров",
                    "type": "integer"
                },
                "ill": {
                    "description": "количество больных коров",
                    "type": "integer"
                },
                "regionID": {
                    "description": "ID региона",
                    "type": "integer"
                }
            }
        },
        "analitics.cmByDistrictStatistics": {
            "type": "object",
            "properties": {
                "cmCount": {
                    "description": "количество обработанных контрольных доений (служебная)",
                    "type": "integer"
                },
                "cowCount": {
                    "description": "количество обработанных коров (служебная)",
                    "type": "integer"
                },
                "districtId": {
                    "description": "ID района",
                    "type": "integer"
                },
                "fat": {
                    "description": "жир на корову",
                    "type": "number"
                },
                "milk": {
                    "description": "удой на корову",
                    "type": "number"
                },
                "protein": {
                    "description": "белок на корову",
                    "type": "number"
                }
            }
        },
        "analitics.cmByHozStatistics": {
            "type": "object",
            "properties": {
                "cmCount": {
                    "description": "служебная штука",
                    "type": "integer"
                },
                "cowCount": {
                    "description": "служебная штука",
                    "type": "integer"
                },
                "fat": {
                    "description": "жир на корову",
                    "type": "number"
                },
                "milk": {
                    "description": "удой на корову",
                    "type": "number"
                },
                "protein": {
                    "description": "белок на корову",
                    "type": "number"
                }
            }
        },
        "analitics.cmByRegionStatistics": {
            "type": "object",
            "properties": {
                "cmCount": {
                    "description": "служебная штука (кол-во контрольных доений)",
                    "type": "integer"
                },
                "cowCount": {
                    "description": "служебная штука (кол-во коров)",
                    "type": "integer"
                },
                "fat": {
                    "description": "жир на корову",
                    "type": "number"
                },
                "milk": {
                    "description": "надой на корову",
                    "type": "number"
                },
                "protein": {
                    "description": "белок на корову",
                    "type": "number"
                },
                "regionId": {
                    "description": "ID региона по которому собрана аналитика",
                    "type": "integer"
                }
            }
        },
        "auth.AuthData": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "почта",
                    "type": "string"
                },
                "password": {
                    "description": "пароль, не зашифрованный",
                    "type": "string"
                }
            }
        },
        "auth.RegisterData": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "farm": {
                    "type": "integer"
                },
                "fullname": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "region": {
                    "type": "integer"
                },
                "role": {
                    "type": "integer"
                }
            }
        },
        "cows.Children": {
            "type": "object",
            "properties": {
                "breed_name": {
                    "description": "Порода ребенка",
                    "type": "string"
                },
                "child": {
                    "$ref": "#/definitions/models.Cow"
                },
                "hoz_name": {
                    "description": "Название хозяйства, в котором ребенок",
                    "type": "string"
                }
            }
        },
        "cows.FilterSerializedCow": {
            "type": "object",
            "required": [
                "approved",
                "birthDate",
                "farmGroupName",
                "genotyped",
                "id",
                "inventoryNumber",
                "name",
                "rshnnumber"
            ],
            "properties": {
                "approved": {
                    "description": "Подтверждена ли админом",
                    "type": "boolean",
                    "example": true
                },
                "birkingDate": {
                    "description": "Дата перебирковки",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.DateOnly"
                        }
                    ]
                },
                "birthDate": {
                    "description": "Дата рождения коровы",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.DateOnly"
                        }
                    ]
                },
                "breedName": {
                    "description": "Название породы коровы",
                    "type": "string",
                    "example": "Какая-нибудь порода"
                },
                "calvingDate": {
                    "description": "Дата отела",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DateOnly"
                    }
                },
                "checkMilkDate": {
                    "description": "Дата контрольного доения",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DateOnly"
                    }
                },
                "createdAt": {
                    "description": "Дата внесения информации о корове в БД",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.DateOnly"
                        }
                    ]
                },
                "deathDate": {
                    "description": "Дата смерти",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.DateOnly"
                        }
                    ]
                },
                "departDate": {
                    "description": "Дата выбытия",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.DateOnly"
                        }
                    ]
                },
                "events": {
                    "description": "Вет события",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Event"
                    }
                },
                "exteriorRating": {
                    "description": "Оценка экстерьера",
                    "type": "number"
                },
                "farmGroupName": {
                    "description": "Название хозяйства, в котором корова",
                    "type": "string",
                    "example": "ООО Аурус"
                },
                "genotyped": {
                    "description": "Факт генотипирования коровы",
                    "type": "boolean",
                    "example": true
                },
                "genotypingDate": {
                    "description": "Дата генотипирования",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.DateOnly"
                        }
                    ]
                },
                "hozName": {
                    "description": "Название хозяйства",
                    "type": "string"
                },
                "id": {
                    "description": "ID коровы",
                    "type": "integer",
                    "example": 123
                },
                "inbrindingCoeffByFamily": {
                    "description": "Коэф. инбриндинга по родословной",
                    "type": "number",
                    "example": 3.14
                },
                "inbrindingCoeffByGenotype": {
                    "description": "Коэф. инбриндинга по генотипу",
                    "type": "number",
                    "example": 3.14
                },
                "insemenationDate": {
                    "description": "Дата осеменения",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DateOnly"
                    }
                },
                "inventoryNumber": {
                    "description": "Инвентарный номер коровы",
                    "type": "string",
                    "example": "321"
                },
                "isAborted": {
                    "description": "Факт аборта",
                    "type": "boolean"
                },
                "isDead": {
                    "description": "Факт смерти",
                    "type": "boolean"
                },
                "isGenotyped": {
                    "description": "Факт генотипирования",
                    "type": "boolean"
                },
                "isStillBorn": {
                    "description": "Факт мертворождения",
                    "type": "boolean"
                },
                "isTwins": {
                    "description": "Факт рождения близнецов",
                    "type": "boolean"
                },
                "monogeneticIllneses": {
                    "description": "моногенные заболевания",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.GeneticIllnessData"
                    }
                },
                "name": {
                    "description": "Кличка коровы",
                    "type": "string",
                    "example": "Буренка"
                },
                "rshnnumber": {
                    "description": "РСХН номер коровы",
                    "type": "string",
                    "example": "123"
                },
                "sexName": {
                    "description": "Название породы",
                    "type": "string"
                }
            }
        },
        "cows.ReserealizedCheckMilk": {
            "type": "object",
            "properties": {
                "checkDate": {
                    "description": "Дата конрольной дойки",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.DateOnly"
                        }
                    ]
                },
                "dryMatter": {
                    "description": "сухой материал",
                    "type": "number"
                },
                "fat": {
                    "description": "Параметр контрольной дойки, как я понимаю кол-во жира в молоке",
                    "type": "number",
                    "example": 1
                },
                "id": {
                    "description": "ID контрольной дойки",
                    "type": "integer",
                    "example": 1
                },
                "lactationId": {
                    "description": "ID лактации для которой выполнена контрольная дойка",
                    "type": "integer",
                    "example": 1
                },
                "lactationNumber": {
                    "description": "Номер лактации",
                    "type": "integer"
                },
                "milk": {
                    "description": "Параметр контрольной дойки, как я понимаю кол-во молока",
                    "type": "number",
                    "example": 1
                },
                "milkingDays": {
                    "description": "День доения относительно начала лактации",
                    "type": "integer"
                },
                "probeNumber": {
                    "description": "номер пробы",
                    "type": "integer"
                },
                "protein": {
                    "description": "Параметр контрольной дойки, как я понимаю кол-во белка в молоке",
                    "type": "number",
                    "example": 1
                },
                "somaticNucCount": {
                    "description": "количество соматических клеток",
                    "type": "number"
                }
            }
        },
        "cows.ReserealizedCow": {
            "type": "object",
            "properties": {
                "approved": {
                    "description": "Целое число, 0 - корова не подтверждена, 1 - корова подтверждена, -1 - корова отклонена",
                    "type": "integer",
                    "example": 1
                },
                "birkingDate": {
                    "description": "Дата перебирковки",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.DateOnly"
                        }
                    ]
                },
                "birthDate": {
                    "description": "День рождения",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.DateOnly"
                        }
                    ]
                },
                "birthHozId": {
                    "description": "ID хозяйства рождения",
                    "type": "integer"
                },
                "birthMethod": {
                    "description": "способ зачатия: клон, эмбрион, искусственное осеменени, естественное осеменение",
                    "type": "string"
                },
                "breedId": {
                    "description": "ID породы коровы",
                    "type": "integer",
                    "example": 1
                },
                "breedName": {
                    "description": "порода, null если нет",
                    "type": "string"
                },
                "createdAt": {
                    "description": "Время создания коровы в базе данных",
                    "type": "string",
                    "example": "2007-01-01"
                },
                "deathDate": {
                    "description": "Дата смерти",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.DateOnly"
                        }
                    ]
                },
                "departDate": {
                    "description": "День отбытия из коровника",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.DateOnly"
                        }
                    ]
                },
                "exterior": {
                    "$ref": "#/definitions/models.Exterior"
                },
                "farmGroupId": {
                    "description": "ID хозяйства, которому корова принадлежит",
                    "type": "integer",
                    "example": 1
                },
                "farmID": {
                    "description": "ID фермы, которой корова принадлежит",
                    "type": "integer",
                    "example": 1
                },
                "farmName": {
                    "description": "ферма на которой живет, null если нет",
                    "type": "string"
                },
                "father": {
                    "description": "Отец",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Cow"
                        }
                    ]
                },
                "fatherSelecs": {
                    "description": "ID коровы отца коровы",
                    "type": "integer"
                },
                "genetic": {
                    "$ref": "#/definitions/models.Genetic"
                },
                "gradeHozId": {
                    "description": "оценка по хозяйству",
                    "type": "integer",
                    "example": 1
                },
                "gradeRegionId": {
                    "description": "оценка по региону",
                    "type": "integer",
                    "example": 1
                },
                "holding": {
                    "$ref": "#/definitions/models.Farm"
                },
                "holdingID": {
                    "description": "ID холдинга, которому принадлежит корова",
                    "type": "integer"
                },
                "hozHame": {
                    "description": "хозяйство на котором живет, null, если нет",
                    "type": "string"
                },
                "id": {
                    "description": "ID коровы",
                    "type": "integer",
                    "example": 1
                },
                "identificationNumber": {
                    "description": "он все-таки есть! это какой-то не российский номер коровы",
                    "type": "string"
                },
                "inbrindingCoeffByFamily": {
                    "description": "Exterior                float64  ` + "`" + `example:\"3.14\"` + "`" + ` // Оценка экстерьера коровы, будет переделано в ID экстерьера коровы",
                    "type": "number",
                    "example": 3.14
                },
                "inventoryNumber": {
                    "description": "Инвентарный номер коровы",
                    "type": "string",
                    "example": "1213321"
                },
                "mother": {
                    "description": "Мать",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Cow"
                        }
                    ]
                },
                "motherSelecs": {
                    "description": "ID коровы матери коровы",
                    "type": "integer"
                },
                "name": {
                    "description": "Кличка коровы",
                    "type": "string",
                    "example": "Дима"
                },
                "previousHozId": {
                    "description": "ID предыдущего хозяйства, когда корову продают, она переходит к новому владельцу и становится \"новой коровой\"",
                    "type": "integer"
                },
                "rshnnumber": {
                    "description": "РСХН номер коровы",
                    "type": "string",
                    "example": "1323323232"
                },
                "selecsNumber": {
                    "description": "Селекс номер коровы",
                    "type": "integer",
                    "example": 98989
                },
                "sexId": {
                    "description": "ID пола коровы",
                    "type": "integer",
                    "example": 1
                },
                "sexName": {
                    "description": "пол, null если нет",
                    "type": "string"
                }
            }
        },
        "cows_filter.CowsFilter": {
            "type": "object",
            "properties": {
                "birkingDateFrom": {
                    "description": "Фильтр по дате перебирковки коровы, ищет коров у которых быа перебирковка в эту дату или позднее",
                    "type": "string",
                    "example": "1800-01-21"
                },
                "birkingDateTo": {
                    "description": "Фильтр по дате осеменения коровы, ищет коров у которых была перебирковка в эту дату или позднее",
                    "type": "string",
                    "example": "2800-01-21"
                },
                "birthDateFrom": {
                    "description": "RegionId               *uint   ` + "`" + `example:\"1\" validate:\"optional\"` + "`" + `          //ID региона, для которого ищутся коровы",
                    "type": "string",
                    "example": "1800-01-21"
                },
                "birthDateTo": {
                    "description": "Фильтр по дню рождения коровы ОТ (возращает всех кто родился в эту дату или раньше)",
                    "type": "string",
                    "example": "2800-01-21"
                },
                "breedId": {
                    "description": "Фильтр по ID пород несколько ID пород - возращает всех коров, ID пород которых в списке",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "calvingDateFrom": {
                    "description": "Фильтр по дате отела коровы, ищет коров у которых был отел в эту дату или позднее",
                    "type": "string",
                    "example": "1800-01-21"
                },
                "calvingDateTo": {
                    "description": "Фильтр по дате осеменения коровы, ищет коров у которых был отел в эту дату или позднее",
                    "type": "string",
                    "example": "2800-01-21"
                },
                "controlMilkingDateFrom": {
                    "description": "Фильтр по дате контрольной дойки, ищет коров у которых была контрольная дойка в эту дату или позднее",
                    "type": "string",
                    "example": "1800-01-21"
                },
                "controlMilkingDateTo": {
                    "description": "Фильтр по дате контрольной дойки, ищет коров у которых была контрольная дойка в эту дату или ранее",
                    "type": "string",
                    "example": "2800-01-21"
                },
                "createdAtFrom": {
                    "description": "Фильтр по дате внесения записи в БД ОТ",
                    "type": "string"
                },
                "createdAtTo": {
                    "description": "Фильтр по дате внесения записи в БД ДО",
                    "type": "string"
                },
                "departDateFrom": {
                    "description": "Фильтр по дате открепления коровы ищет всех коров открепленных от коровника в эту дату или позднее",
                    "type": "string",
                    "example": "1800-01-21"
                },
                "departDateTo": {
                    "description": "Фильтр по дате открепления коровы ищет всех коров открепленных от коровника в эту дату или раньше",
                    "type": "string",
                    "example": "2800-01-21"
                },
                "entitiesOnPage": {
                    "description": "Количество сущностей на странице",
                    "type": "integer",
                    "default": 50
                },
                "exteriorFrom": {
                    "description": "Фильтр по оценке экстерьера коровы ОТ",
                    "type": "number",
                    "default": 3.14
                },
                "exteriorTo": {
                    "description": "Фильтр по оценке экстерьера коровы ДО",
                    "type": "number",
                    "default": 3.14
                },
                "genotypingDateFrom": {
                    "description": "фильтр по дате генотипирования ОТ",
                    "type": "string",
                    "example": "1800-01-21"
                },
                "genotypingDateTo": {
                    "description": "фильтр по дате генотипирования ДО",
                    "type": "string",
                    "example": "2800-01-21"
                },
                "hasAnyIllnes": {
                    "description": "Флаг true - возращает коров у которых есть хотябы одно заболевение, false - возращает коров, у которых нет ни одного",
                    "type": "boolean",
                    "default": false
                },
                "hozId": {
                    "description": "ID фермы, для которой ищутся коровы",
                    "type": "integer",
                    "example": 1
                },
                "illDateFrom": {
                    "description": "Фильтр по дате начала болезни ОТ",
                    "type": "string",
                    "example": "1800-01-21"
                },
                "illDateTo": {
                    "description": "Фильтр по дате начала болезни ДО",
                    "type": "string",
                    "example": "1800-01-21"
                },
                "inbrindingCoeffByFamilyFrom": {
                    "description": "фильтр по коэф. инбриндинга по роду ОТ",
                    "type": "number",
                    "default": 3.14
                },
                "inbrindingCoeffByFamilyTo": {
                    "description": "фильтр по коэф. инбриндинга по роду ДО",
                    "type": "number",
                    "default": 3.14
                },
                "inbrindingCoeffByGenotypeFrom": {
                    "description": "фильтр по коэф. инбриндинга по генотипу ОТ",
                    "type": "number",
                    "default": 3.14
                },
                "inbrindingCoeffByGenotypeTo": {
                    "description": "фильтр по коэф. инбриндинга по генотипу ДО",
                    "type": "number",
                    "default": 3.14
                },
                "inseminationDateFrom": {
                    "description": "Exterior             *float64 ` + "`" + `default:\"3.14\" validate:\"optional\"` + "`" + `       // Фильтр по оценке экстерьера коровы, будет переработан",
                    "type": "string",
                    "example": "1800-01-21"
                },
                "inseminationDateTo": {
                    "description": "Фильтр по дате осеменения коровы, ищет коров у которых было осеменение в эту дату или ранее",
                    "type": "string",
                    "example": "2800-01-21"
                },
                "isAborted": {
                    "description": "Фильтр по абортам Был/ не был",
                    "type": "boolean",
                    "default": false
                },
                "isDead": {
                    "description": "Фильтр живых/мертвых коров (true - ищет мертвых, false - живых)",
                    "type": "boolean",
                    "default": false
                },
                "isGenotyped": {
                    "description": "Фильтр по наличию информации о генотипировании",
                    "type": "boolean"
                },
                "isIll": {
                    "description": "Фильтр по наличию генетических заболеваний",
                    "type": "boolean",
                    "default": false
                },
                "isStillBorn": {
                    "description": "Фильтр по мертворождению Было/не было",
                    "type": "boolean",
                    "default": false
                },
                "isTwins": {
                    "description": "Фильтр по родам двойняшек Было / не было",
                    "type": "boolean",
                    "default": false
                },
                "monogeneticIllneses": {
                    "description": "ID ген. заболеваний из /api/mongenetic_illnesses",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "orderBy": {
                    "description": "Может принимать следующие и только следующие значения: null, \"RSHN\", \"InventoryNumber\", \"Name\", \"HozName\", \"BirthDate\"",
                    "type": "string"
                },
                "orderByDesc": {
                    "description": "true - в порядке убывания, false - в порядке возрастания",
                    "type": "boolean"
                },
                "pageNumber": {
                    "description": "Номер страницы для отображения",
                    "type": "integer",
                    "default": 1
                },
                "regionId": {
                    "description": "по региону",
                    "type": "integer"
                },
                "searchQuery": {
                    "description": "Имя, номер РСХН или инвентарный номер, по которым ищется корова",
                    "type": "string",
                    "example": "Буренка"
                },
                "sex": {
                    "description": "ID пола коровы (если нужно несколько разных полов - несколько ID)",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "models.Breed": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "ID породы",
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "description": "Название породы",
                    "type": "string",
                    "example": "Какая-нибудь порода"
                }
            }
        },
        "models.CheckMilk": {
            "type": "object",
            "properties": {
                "checkDate": {
                    "description": "Дата конрольной дойки",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.DateOnly"
                        }
                    ]
                },
                "dryMatter": {
                    "description": "сухой материал",
                    "type": "number"
                },
                "fat": {
                    "description": "Параметр контрольной дойки, как я понимаю кол-во жира в молоке",
                    "type": "number",
                    "example": 1
                },
                "id": {
                    "description": "ID контрольной дойки",
                    "type": "integer",
                    "example": 1
                },
                "lactationId": {
                    "description": "ID лактации для которой выполнена контрольная дойка",
                    "type": "integer",
                    "example": 1
                },
                "milk": {
                    "description": "Параметр контрольной дойки, как я понимаю кол-во молока",
                    "type": "number",
                    "example": 1
                },
                "probeNumber": {
                    "description": "номер пробы",
                    "type": "integer"
                },
                "protein": {
                    "description": "Параметр контрольной дойки, как я понимаю кол-во белка в молоке",
                    "type": "number",
                    "example": 1
                },
                "somaticNucCount": {
                    "description": "количество соматических клеток",
                    "type": "number"
                }
            }
        },
        "models.Cow": {
            "type": "object",
            "properties": {
                "approved": {
                    "description": "Целое число, 0 - корова не подтверждена, 1 - корова подтверждена, -1 - корова отклонена",
                    "type": "integer",
                    "example": 1
                },
                "birkingDate": {
                    "description": "Дата перебирковки",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.DateOnly"
                        }
                    ]
                },
                "birthDate": {
                    "description": "День рождения",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.DateOnly"
                        }
                    ]
                },
                "birthHozId": {
                    "description": "ID хозяйства рождения",
                    "type": "integer"
                },
                "birthMethod": {
                    "description": "способ зачатия: клон, эмбрион, искусственное осеменени, естественное осеменение",
                    "type": "string"
                },
                "breedId": {
                    "description": "ID породы коровы",
                    "type": "integer",
                    "example": 1
                },
                "createdAt": {
                    "description": "Время создания коровы в базе данных",
                    "type": "string",
                    "example": "2007-01-01"
                },
                "deathDate": {
                    "description": "Дата смерти",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.DateOnly"
                        }
                    ]
                },
                "departDate": {
                    "description": "День отбытия из коровника",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.DateOnly"
                        }
                    ]
                },
                "exterior": {
                    "$ref": "#/definitions/models.Exterior"
                },
                "farmGroupId": {
                    "description": "ID хозяйства, которому корова принадлежит",
                    "type": "integer",
                    "example": 1
                },
                "farmID": {
                    "description": "ID фермы, которой корова принадлежит",
                    "type": "integer",
                    "example": 1
                },
                "fatherSelecs": {
                    "description": "ID коровы отца коровы",
                    "type": "integer"
                },
                "genetic": {
                    "$ref": "#/definitions/models.Genetic"
                },
                "gradeHozId": {
                    "description": "оценка по хозяйству",
                    "type": "integer",
                    "example": 1
                },
                "gradeRegionId": {
                    "description": "оценка по региону",
                    "type": "integer",
                    "example": 1
                },
                "holding": {
                    "$ref": "#/definitions/models.Farm"
                },
                "holdingID": {
                    "description": "ID холдинга, которому принадлежит корова",
                    "type": "integer"
                },
                "id": {
                    "description": "ID коровы",
                    "type": "integer",
                    "example": 1
                },
                "identificationNumber": {
                    "description": "он все-таки есть! это какой-то не российский номер коровы",
                    "type": "string"
                },
                "inbrindingCoeffByFamily": {
                    "description": "Exterior                float64  ` + "`" + `example:\"3.14\"` + "`" + ` // Оценка экстерьера коровы, будет переделано в ID экстерьера коровы",
                    "type": "number",
                    "example": 3.14
                },
                "inventoryNumber": {
                    "description": "Инвентарный номер коровы",
                    "type": "string",
                    "example": "1213321"
                },
                "motherSelecs": {
                    "description": "ID коровы матери коровы",
                    "type": "integer"
                },
                "name": {
                    "description": "Кличка коровы",
                    "type": "string",
                    "example": "Дима"
                },
                "previousHozId": {
                    "description": "ID предыдущего хозяйства, когда корову продают, она переходит к новому владельцу и становится \"новой коровой\"",
                    "type": "integer"
                },
                "rshnnumber": {
                    "description": "РСХН номер коровы",
                    "type": "string",
                    "example": "1323323232"
                },
                "selecsNumber": {
                    "description": "Селекс номер коровы",
                    "type": "integer",
                    "example": 98989
                },
                "sexId": {
                    "description": "ID пола коровы",
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "models.DailyMilk": {
            "type": "object",
            "properties": {
                "date": {
                    "description": "Дата дойки",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.DateOnly"
                        }
                    ]
                },
                "fat": {
                    "description": "Суммарный жир ` + "`" + `example:\"12\"` + "`" + `",
                    "type": "integer"
                },
                "fatEvening": {
                    "description": "Жир вечером ` + "`" + `example:\"12\"` + "`" + `",
                    "type": "integer"
                },
                "fatMorning": {
                    "description": "Жир утром` + "`" + `example:\"12\"` + "`" + `",
                    "type": "integer"
                },
                "fatNoon": {
                    "description": "Жир днем ` + "`" + `example:\"12\"` + "`" + `",
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "lactationId": {
                    "description": "ID лактации во время котороый была дойка ` + "`" + `example:\"1\"` + "`" + `",
                    "type": "integer"
                },
                "milk": {
                    "description": "Суммарный надой ` + "`" + `example:\"12\"` + "`" + `",
                    "type": "integer"
                },
                "milkEvening": {
                    "description": "Надой вечером ` + "`" + `example:\"12\"` + "`" + `",
                    "type": "integer"
                },
                "milkMorning": {
                    "description": "Надой утром ` + "`" + `example:\"12\"` + "`" + `",
                    "type": "integer"
                },
                "milkNoon": {
                    "description": "Надой днем ` + "`" + `example:\"12\"` + "`" + `",
                    "type": "integer"
                },
                "protein": {
                    "description": "Суммарный белок ` + "`" + `example:\"12\"` + "`" + `",
                    "type": "integer"
                },
                "proteinEvening": {
                    "description": "Белок вечером ` + "`" + `example:\"12\"` + "`" + `",
                    "type": "integer"
                },
                "proteinMorning": {
                    "description": "Белок утром ` + "`" + `example:\"12\"` + "`" + `",
                    "type": "integer"
                },
                "proteinNoon": {
                    "description": "Белок днем ` + "`" + `example:\"12\"` + "`" + `",
                    "type": "integer"
                }
            }
        },
        "models.DateOnly": {
            "type": "object",
            "properties": {
                "time.Time": {
                    "type": "string"
                }
            }
        },
        "models.Document": {
            "type": "object",
            "properties": {
                "cowID": {
                    "description": "ID коровы, для которой хранитя документ",
                    "type": "integer"
                },
                "id": {
                    "description": "ID",
                    "type": "integer"
                },
                "path": {
                    "description": "путь к документу относительно genmilk.ru/api/static/documents",
                    "type": "string"
                }
            }
        },
        "models.Event": {
            "type": "object",
            "properties": {
                "comment1": {
                    "description": "Коментарий 1 (по всей видиости сюда что-то пришет врач)",
                    "type": "string"
                },
                "comment2": {
                    "description": "Коментарий 2",
                    "type": "string"
                },
                "cowId": {
                    "description": "ID коровы",
                    "type": "integer"
                },
                "dataResourse": {
                    "description": "источник данных",
                    "type": "string"
                },
                "date": {
                    "description": "Дата ветеринарного события",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.DateOnly"
                        }
                    ]
                },
                "daysFromLactation": {
                    "description": "дни от начала лактации",
                    "type": "integer"
                },
                "eventType": {
                    "$ref": "#/definitions/models.EventType"
                },
                "eventType1": {
                    "$ref": "#/definitions/models.EventType"
                },
                "eventType1Id": {
                    "description": "стандартизированная название события",
                    "type": "integer"
                },
                "eventType2": {
                    "$ref": "#/definitions/models.EventType"
                },
                "eventType2Id": {
                    "description": "стандартизированное разновидность события",
                    "type": "integer"
                },
                "eventTypeId": {
                    "description": "стандартизированная группа события",
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "models.EventType": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "код группы или разновидности или названия события",
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "description": "Название группы/названия/разновидности события",
                    "type": "string"
                },
                "parentId": {
                    "description": "ID старшего в иерархии типов события типа (для разновидности события ID группы событий, которой эта разновидность принадлежит)",
                    "type": "integer"
                },
                "type": {
                    "description": "1 - группа события, 2 - разновидность события, 3 - название события",
                    "type": "integer"
                }
            }
        },
        "models.Exterior": {
            "type": "object",
            "properties": {
                "acrumLength": {
                    "type": "number"
                },
                "bodyDepth": {
                    "type": "number"
                },
                "bodyStructure": {
                    "type": "number"
                },
                "boneQHockJointRear": {
                    "type": "number"
                },
                "centerLigamentDepth": {
                    "type": "number"
                },
                "chestWidth": {
                    "type": "number"
                },
                "conditioning": {
                    "type": "number"
                },
                "cowID": {
                    "type": "integer"
                },
                "exteriorType": {
                    "type": "number"
                },
                "foreLegPosFront": {
                    "type": "number"
                },
                "foreTeatDiameter": {
                    "type": "number"
                },
                "foreTeatLendth": {
                    "type": "number"
                },
                "foreUdderAttach": {
                    "type": "number"
                },
                "foreUdderPlcRear": {
                    "type": "number"
                },
                "foreUdderWidth": {
                    "type": "number"
                },
                "harmonyOfMovement": {
                    "type": "number"
                },
                "heightOfUdderAttach": {
                    "type": "number"
                },
                "hindLegPosRead": {
                    "type": "number"
                },
                "hindLegPosSide": {
                    "type": "number"
                },
                "hindTeatPlc": {
                    "type": "number"
                },
                "hindUdderWidth": {
                    "type": "number"
                },
                "hoofAngle": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "limbs": {
                    "type": "number"
                },
                "milkStrength": {
                    "type": "number"
                },
                "pelvicWidth": {
                    "type": "number"
                },
                "picturePath": {
                    "type": "string"
                },
                "prominenceOfMilkVeins": {
                    "type": "number"
                },
                "rating": {
                    "type": "number"
                },
                "rearTeatDiameter": {
                    "type": "number"
                },
                "rearTeatLength": {
                    "type": "number"
                },
                "sacrumAngle": {
                    "type": "number"
                },
                "sacrumHeight": {
                    "type": "number"
                },
                "topLine": {
                    "type": "number"
                },
                "udder": {
                    "type": "number"
                },
                "udderBalance": {
                    "type": "number"
                },
                "udderDepth": {
                    "type": "number"
                }
            }
        },
        "models.Farm": {
            "type": "object",
            "properties": {
                "address": {
                    "description": "Адрес",
                    "type": "string"
                },
                "cowsCount": {
                    "description": "количество коров",
                    "type": "integer"
                },
                "description": {
                    "description": "описание",
                    "type": "string"
                },
                "districtId": {
                    "description": "ID района, в котором находится хозяйство",
                    "type": "integer"
                },
                "email": {
                    "description": "эл. почта",
                    "type": "string"
                },
                "hozNumber": {
                    "description": "Region   Region ` + "`" + `json:\"-\"` + "`" + `\nRegionId uint",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "inn": {
                    "description": "ИНН",
                    "type": "string"
                },
                "name": {
                    "description": "Название хозяйства",
                    "type": "string"
                },
                "nameShort": {
                    "description": "Краткое название хозйства",
                    "type": "string"
                },
                "parrentId": {
                    "description": "ID более управляющего хоз-ва (для хозяйства - холдинг, для фермы - хозяйство)",
                    "type": "integer"
                },
                "phone": {
                    "description": "телефон",
                    "type": "string"
                },
                "type": {
                    "description": "Тип: хозяйство, ферма, холдинг",
                    "type": "integer"
                }
            }
        },
        "models.Genetic": {
            "type": "object",
            "properties": {
                "bloodDate": {
                    "description": "Дата взятия пробы крови",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.DateOnly"
                        }
                    ]
                },
                "cowID": {
                    "description": "ID коровы",
                    "type": "integer"
                },
                "geneticIllnessesData": {
                    "description": "Список генетических заболеваний, пустой если нет",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.GeneticIllnessData"
                    }
                },
                "gtcFilePath": {
                    "description": "путь к gtc файлу относительно genmilk.ru/api/static/gtc",
                    "type": "string"
                },
                "id": {
                    "description": "ID записи о генотипировании",
                    "type": "integer"
                },
                "inbrindingCoeffByGenotype": {
                    "description": "Коэф. инбриндинга по генотипу",
                    "type": "number"
                },
                "probeNumber": {
                    "description": "Номер пробы",
                    "type": "string"
                },
                "resultDate": {
                    "description": "Дата получения  результата",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.DateOnly"
                        }
                    ]
                }
            }
        },
        "models.GeneticIllness": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "описание генетического заболевания",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "description": "имя генетического заболевания",
                    "type": "string"
                },
                "omia": {
                    "description": "Какой-то там ОМИЯ номер",
                    "type": "string"
                }
            }
        },
        "models.GeneticIllnessData": {
            "type": "object",
            "properties": {
                "geneticID": {
                    "description": "ID данных о генотипировании коровы, к которым относятся данные о заболеваниях коровы",
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "illness": {
                    "$ref": "#/definitions/models.GeneticIllness"
                },
                "illnessID": {
                    "description": "ID заболевание",
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/models.GeneticIllnessStatus"
                },
                "statusID": {
                    "description": "ID статус заболевания",
                    "type": "integer"
                }
            }
        },
        "models.GeneticIllnessStatus": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "status": {
                    "description": "Статус заболевания: FREE, CARIER, BAD ...",
                    "type": "string"
                }
            }
        },
        "models.Grade": {
            "type": "object",
            "properties": {
                "ebvFat": {
                    "description": "Оценка жира по EBV",
                    "type": "number"
                },
                "ebvInsemenation": {
                    "description": "Оценка кратности осеменения по EBV",
                    "type": "number"
                },
                "ebvMilk": {
                    "description": "Оценка удоя по EBV",
                    "type": "number"
                },
                "ebvProtein": {
                    "description": "Оценка белка по EBV",
                    "type": "number"
                },
                "evbService": {
                    "description": "Оценка длительности сервисного периода по EBV",
                    "type": "number"
                },
                "generalValue": {
                    "description": "CowID           uint",
                    "type": "number"
                },
                "id": {
                    "description": "ID оценки",
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "models.HoldRegisterRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "cowsCount": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "districtId": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "hozNumber": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "inn": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "shortName": {
                    "type": "string"
                }
            }
        },
        "models.HozRegisterRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "cowsCount": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "districtId": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "holdNumber": {
                    "type": "string"
                },
                "hozNumber": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "inn": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "shortName": {
                    "type": "string"
                }
            }
        },
        "models.Lactation": {
            "type": "object",
            "properties": {
                "abort": {
                    "description": "был ли аборт",
                    "type": "boolean"
                },
                "calvingCount": {
                    "description": "Количество рожденных телят: 0 - мертворождение, 2 - двойня",
                    "type": "integer"
                },
                "calvingDate": {
                    "$ref": "#/definitions/models.DateOnly"
                },
                "cowId": {
                    "description": "ID коровы, данные о лактации которой записаны",
                    "type": "integer"
                },
                "days": {
                    "description": "количество дней, когда корова дает молоко",
                    "type": "integer"
                },
                "fat305": {
                    "description": "Суммарный жир за 305 дней",
                    "type": "number"
                },
                "fatAll": {
                    "description": "Суммарный жир",
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "insemenationDate": {
                    "description": "Дата осеменения",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.DateOnly"
                        }
                    ]
                },
                "insemenationNum": {
                    "description": "Количество осеменений",
                    "type": "integer"
                },
                "milk305": {
                    "description": "Суммарный надой за 305 дней",
                    "type": "number"
                },
                "milkAll": {
                    "description": "Суммарный надой",
                    "type": "number"
                },
                "number": {
                    "description": "номер лактации",
                    "type": "integer"
                },
                "protein305": {
                    "description": "Суммарный белок за 305 дней",
                    "type": "number"
                },
                "proteinAll": {
                    "description": "Суммарный белок",
                    "type": "number"
                },
                "servicePeriod": {
                    "description": "сервис период коровы: время от отела до осеменения",
                    "type": "integer"
                }
            }
        },
        "models.News": {
            "type": "object",
            "properties": {
                "date": {
                    "description": "Дата новости",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.DateOnly"
                        }
                    ]
                },
                "id": {
                    "type": "integer"
                },
                "regionId": {
                    "description": "ID региона для которого записана новость",
                    "type": "integer"
                },
                "text": {
                    "description": "Текст новости",
                    "type": "string"
                },
                "title": {
                    "description": "Заголовок новости",
                    "type": "string"
                }
            }
        },
        "models.Partner": {
            "type": "object",
            "properties": {
                "address": {
                    "description": "Адрес",
                    "type": "string"
                },
                "description": {
                    "description": "описание партнера",
                    "type": "string"
                },
                "email": {
                    "description": "эл. почта",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "logoPath": {
                    "description": "путь к логотипу партнера относительно genmlik.ru/api/static/partners",
                    "type": "string"
                },
                "name": {
                    "description": "Название партнера",
                    "type": "string"
                },
                "phone": {
                    "description": "телефон",
                    "type": "string"
                }
            }
        },
        "models.Region": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "default": 1
                },
                "name": {
                    "description": "название региона",
                    "type": "string",
                    "example": "Усть-Каменский"
                },
                "news": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.News"
                    }
                },
                "regNum": {
                    "description": "номер региона (Архангельская область = 29)",
                    "type": "integer"
                }
            }
        },
        "models.Role": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "description": "название роли",
                    "type": "string"
                }
            }
        },
        "models.Sex": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "description": "Название пола",
                    "type": "string"
                }
            }
        },
        "models.Update": {
            "type": "object",
            "properties": {
                "date": {
                    "description": "Дата обновления базы данных",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "models.UserRegisterRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "hozNumber": {
                    "description": "номер хоз-ва к которому привязвыается пользователь: либо существует, либо newHoz",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "nameSurnamePatronimic": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "regionId": {
                    "type": "integer"
                },
                "roleId": {
                    "type": "integer"
                }
            }
        },
        "user_create.createUserData": {
            "type": "object",
            "properties": {
                "newHold": {
                    "description": "не обрабатывается",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.HoldRegisterRequest"
                        }
                    ]
                },
                "newHoz": {
                    "description": "не обрабатывается",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.HozRegisterRequest"
                        }
                    ]
                },
                "newUser": {
                    "description": "данные пользователя для регистрации",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.UserRegisterRequest"
                        }
                    ]
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "genmilk.ru",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "GenMilk API",
	Description:      "Сваггер сгенерирован из кода, поэтому может содержать неточности. По мере возможности они будут описаны далее\nВсе даты передаются как строки\nБольшая часть рутов не возвращает вложенные объекты",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
